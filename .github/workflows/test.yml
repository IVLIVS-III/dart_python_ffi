# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Test

on:
  push:
    branches: [ "main" ]
    paths:
      - packages/**
  pull_request:
    branches: [ "main" ]
    paths:
      - packages/**
  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        os: [ macos-latest ] # [ubuntu-latest, macos-latest]
      fail-fast: true
      max-parallel: 1
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'
          architecture: x64
      - run: flutter --version

      - run: dart pub global activate melos

      - run: dart pub global activate dartpip

      - name: Install dependencies
        run: melos bs

      - name: Revert codegen changes
        run: git restore packages/python_ffi_cpython_dart/lib/src/ffi/generated_bindings.g.dart

      - name: Generate code Python interface definitions
        run: melos dartpip-install

      - name: Verify formatting
        run: melos format-test

      - name: Analyze project source
        run: melos analyze

      - name: Run tests
        run: melos test
